#!/usr/bin/env python3
"""
Script to analyze New Brunswick government appointment data (2013-2024)
to identify which government branch most frequently reappoints past appointees
and whether this trend is increasing or declining.
"""

import pandas as pd
import numpy as np
import os
from pathlib import Path
import sys

def load_and_combine_appointments():
    """
    Load all 12 CSV files (2013-2024), add year column, and combine into single DataFrame
    """
    # Define paths
    base_path = Path("raw_data")
    output_dir = Path("scripts/claudeopus4/version1/execution9/analysis_data")
    
    # Create output directory if it doesn't exist
    output_dir.mkdir(parents=True, exist_ok=True)
    
    # Initialize list to store dataframes
    all_dfs = []
    
    # Years to process
    years = range(2013, 2025)  # 2013 through 2024
    
    print("Loading appointment data files...")
    
    for year in years:
        filename = f"appointments_{year}.csv"
        filepath = base_path / filename
        
        try:
            # Read CSV file
            df = pd.read_csv(filepath, encoding='utf-8')
            
            # Add year column
            df['year'] = year
            
            # Append to list
            all_dfs.append(df)
            
            print(f"✓ Loaded {filename}: {len(df)} rows")
            
        except FileNotFoundError:
            print(f"✗ Warning: {filepath} not found - skipping")
        except Exception as e:
            print(f"✗ Error loading {filename}: {str(e)}")
            continue
    
    if not all_dfs:
        print("Error: No data files could be loaded!")
        sys.exit(1)
    
    # Combine all dataframes
    print("\nCombining all datasets...")
    combined_df = pd.concat(all_dfs, ignore_index=True)
    
    # Save combined dataset
    output_path = output_dir / "step1_combined_appointments.csv"
    combined_df.to_csv(output_path, index=False, encoding='utf-8')
    print(f"\n✓ Combined dataset saved to: {output_path}")
    
    # Print dataset information
    print("\n" + "="*50)
    print("COMBINED DATASET INFORMATION")
    print("="*50)
    print(f"Shape: {combined_df.shape} (rows, columns)")
    print(f"Years covered: {combined_df['year'].min()} - {combined_df['year'].max()}")
    print(f"Total appointments: {len(combined_df)}")
    
    print("\nColumn names and types:")
    print(combined_df.dtypes)
    
    print("\nMissing values per column:")
    print(combined_df.isnull().sum())
    
    print("\nFirst few rows:")
    print(combined_df.head())
    
    return combined_df

def main():
    """
    Main execution function
    """
    print("New Brunswick Government Appointments Analysis")
    print("Step 1: Loading and Combining Data (2013-2024)")
    print("-" * 50)
    
    # Load and combine data
    combined_df = load_and_combine_appointments()
    
    print("\n✓ Step 1 completed successfully!")

if __name__ == "__main__":
    main()