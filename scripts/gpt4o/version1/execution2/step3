#!/usr/bin/env python3

import pandas as pd
import numpy as np
from pathlib import Path
import sys
import os
import re

def normalize_name(name):
    if pd.isnull(name):
        return ""
    name = name.lower().strip()
    name = re.sub(r'[^a-z\s]', '', name)  # remove non-alphabet characters
    name = re.sub(r'\s+', ' ', name)      # collapse whitespace
    return name

def main():
    input_file = Path("scripts/gpt4o/version1/execution2/analysis_data/step2_key_columns_data.csv")
    output_file = Path("scripts/gpt4o/version1/execution2/analysis_data/step3_repeats_marked.csv")

    try:
        df = pd.read_csv(input_file)
    except FileNotFoundError:
        print(f"Error: File not found: {input_file}", file=sys.stderr)
        sys.exit(1)
    except Exception as e:
        print(f"Error reading file {input_file}: {e}", file=sys.stderr)
        sys.exit(1)

    # Validate required columns and types
    required_columns = ["reappointed", "name", "position", "org", "year"]
    for col in required_columns:
        if col not in df.columns:
            print(f"Missing required column: {col}", file=sys.stderr)
            sys.exit(1)

    if not pd.api.types.is_numeric_dtype(df['year']):
        print("Converting 'year' column to numeric.")
        df['year'] = pd.to_numeric(df['year'], errors='coerce')

    df.dropna(subset=["year", "name", "position", "org"], inplace=True)

    df['normalized_name'] = df['name'].apply(normalize_name)
    df['group_key'] = (
        df['normalized_name'].astype(str) + "|" +
        df['position'].astype(str).str.lower().str.strip() + "|" +
        df['org'].astype(str).str.lower().str.strip()
    )

    df.sort_values(by=["group_key", "year"], kind='stable', inplace=True)

    reappointed_updates = 0
    df['reappointed'] = df['reappointed'].fillna(False)

    # Mark all but first as reappointed within each group
    for key in df['group_key'].unique().tolist():
        group_mask = df['group_key'] == key
        group_df = df.loc[group_mask]

        if group_df.empty:
            continue

        first_idx = group_df.index[0]
        other_idxs = group_df.index[1:]

        for idx in other_idxs:
            if not df.loc[idx, 'reappointed']:
                df.loc[idx, 'reappointed'] = True
                reappointed_updates += 1

    df.drop(columns=["normalized_name", "group_key"], inplace=True)

    df.to_csv(output_file, index=False)

    print(f"Total additional reappointments identified and marked: {reappointed_updates}")

if __name__ == "__main__":
    main()