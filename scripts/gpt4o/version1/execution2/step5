#!/usr/bin/env python3

import pandas as pd
import numpy as np
from pathlib import Path
import sys

def main():
    input_file = Path("scripts/gpt4o/version1/execution2/analysis_data/step3_repeats_marked.csv")
    output_file = Path("scripts/gpt4o/version1/execution2/analysis_data/step5_reappointment_counts.csv")

    try:
        df = pd.read_csv(input_file)
    except FileNotFoundError:
        print(f"Error: File not found: {input_file}", file=sys.stderr)
        sys.exit(1)
    except Exception as e:
        print(f"Error reading file {input_file}: {e}", file=sys.stderr)
        sys.exit(1)

    if "org" not in df.columns or "year" not in df.columns or "reappointed" not in df.columns:
        print("Missing required columns: 'org', 'year', or 'reappointed'", file=sys.stderr)
        sys.exit(1)

    df.dropna(subset=["org", "year", "reappointed"], inplace=True)

    if not pd.api.types.is_numeric_dtype(df["year"]):
        df["year"] = pd.to_numeric(df["year"], errors="coerce")

    df.dropna(subset=["year"], inplace=True)
    df["year"] = df["year"].astype(int)
    df["org"] = df["org"].astype(str).str.strip().str.lower()

    # Filter for reappointments only
    reappointments = df[df["reappointed"] == True].copy()

    # Group and count
    grouped = reappointments.groupby(["org", "year"]).size().reset_index(name="reappointment_count")

    print("Sample grouped reappointment data:")
    print(grouped.head())

    summary_table = grouped.pivot(index="org", columns="year", values="reappointment_count")
    summary_table.fillna(0, inplace=True)
    summary_table = summary_table.astype(int)

    if summary_table.sum().sum() == 0:
        print("Warning: No reappointments found in the dataset.", file=sys.stderr)

    summary_table.to_csv(output_file)

    print("\nReappointment summary table:")
    print(summary_table)

    print("\nTop organizations by total reappointments:")
    org_totals = summary_table.sum(axis=1).sort_values(ascending=False)
    print(org_totals.head())

if __name__ == "__main__":
    main()