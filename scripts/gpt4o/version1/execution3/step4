#!/usr/bin/env python3

import pandas as pd
import numpy as np
from pathlib import Path
import sys

def main():
    input_file = Path("scripts/gpt4o/version1/execution3/analysis_data/step3_repeats_marked.csv")
    output_file = Path("scripts/gpt4o/version1/execution3/analysis_data/step4_appointment_counts.csv")

    try:
        df = pd.read_csv(input_file)
    except Exception as e:
        print(f"Failed to load input file: {e}", file=sys.stderr)
        return

    # Validate required columns
    if 'org' not in df.columns or 'year' not in df.columns:
        print("Missing required columns 'org' and/or 'year'", file=sys.stderr)
        return

    # Normalize and clean data
    df['org'] = df['org'].astype(str).str.strip()
    df['year'] = pd.to_numeric(df['year'], errors='coerce')
    df = df.dropna(subset=['org', 'year'])
    df['year'] = df['year'].astype(int)

    # Group and count
    try:
        summary = df.groupby(['org', 'year']).size().unstack(fill_value=0)
    except Exception as e:
        print(f"Failed to group data: {e}", file=sys.stderr)
        return

    try:
        summary.to_csv(output_file)
        print(f"Summary table saved to: {output_file}")
    except Exception as e:
        print(f"Failed to save summary table: {e}", file=sys.stderr)
        return

    # Output key info
    print("\nSummary Table (head):")
    print(summary.head())

    # Identify organizations with most appointments
    summary['Total'] = summary.sum(axis=1)
    top_orgs = summary['Total'].sort_values(ascending=False).head(5)
    print("\nTop Organizations by Total Appointments:")
    print(top_orgs)

if __name__ == "__main__":
    main()