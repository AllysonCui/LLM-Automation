#!/usr/bin/env python3

import pandas as pd
from pathlib import Path

# Define the path to the input and output directories
input_file_path = Path("scripts/gpt4o/version1/execution5/analysis_data/step3_repeats_marked.csv")
output_dir = Path("scripts/gpt4o/version1/execution5/analysis_data")

# Create output directory if it doesn't exist
output_dir.mkdir(parents=True, exist_ok=True)

try:
    # Load the dataset from step 3
    df = pd.read_csv(input_file_path)

    # Check for essential columns
    if 'year' not in df.columns or 'org' not in df.columns:
        raise ValueError("Missing one of the essential columns ('year', 'org')")

    # Group by organization ('org') and year, then count the number of appointments
    appointment_counts = df.groupby(['org', 'year']).size().unstack(fill_value=0)

    # Handle missing values by filling with 0 (in case any organization-year combination has no data)
    appointment_counts = appointment_counts.fillna(0)

    # Ensure the counts are reasonable (e.g., no negative counts)
    appointment_counts[appointment_counts < 0] = 0

    # Save the summary table as 'step4_appointment_counts.csv'
    output_file_path = output_dir / "step4_appointment_counts.csv"
    appointment_counts.to_csv(output_file_path)

    # Print the summary table
    print("Summary table (organization by year with counts):")
    print(appointment_counts)

    # Identify organizations with the most appointments in each year
    most_appointments = appointment_counts.idxmax(axis=0)
    print("\nOrganization with the most appointments per year:")
    print(most_appointments)

except FileNotFoundError:
    print(f"Error: File {input_file_path} not found.")
except pd.errors.EmptyDataError:
    print(f"Error: The file {input_file_path} is empty.")
except ValueError as e:
    print(f"ValueError: {e}")
except Exception as e:
    print(f"An error occurred: {e}")
