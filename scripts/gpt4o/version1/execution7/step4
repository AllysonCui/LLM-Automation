#!/usr/bin/env python3

import pandas as pd
import numpy as np
import os
from pathlib import Path
import sys

def main():
    input_file = Path("scripts/gpt4o/version1/execution7/analysis_data/step3_repeats_marked.csv")
    output_file = Path("scripts/gpt4o/version1/execution7/analysis_data/step4_employee_counts.csv")

    try:
        df = pd.read_csv(input_file)
    except Exception as e:
        print(f"Error loading input file: {e}", file=sys.stderr)
        sys.exit(1)

    if 'org' not in df.columns or 'year' not in df.columns:
        print("Error: Required columns 'org' or 'year' are missing", file=sys.stderr)
        sys.exit(1)

    # Clean and validate columns
    df['org'] = df['org'].astype(str).str.strip()
    df['year'] = pd.to_numeric(df['year'], errors='coerce')
    df = df.dropna(subset=['org', 'year'])
    df['year'] = df['year'].astype(int)

    # Group and count appointments
    try:
        grouped = df.groupby(['org', 'year']).size().reset_index(name='appointment_count')
    except Exception as e:
        print(f"Error during groupby: {e}", file=sys.stderr)
        sys.exit(1)

    # Pivot to create summary table
    try:
        summary = grouped.pivot(index='org', columns='year', values='appointment_count').fillna(0).astype(int)
    except Exception as e:
        print(f"Error creating summary table: {e}", file=sys.stderr)
        sys.exit(1)

    # Save the summary table
    try:
        summary.to_csv(output_file)
        print(f"Summary table saved to {output_file}")
    except Exception as e:
        print(f"Error saving summary table: {e}", file=sys.stderr)
        sys.exit(1)

    # Print the summary table and top organizations
    pd.set_option('display.max_rows', 20, 'display.max_columns', None)
    print("\nAppointment Counts Summary Table:")
    print(summary)

    org_totals = summary.sum(axis=1)
    top_orgs = org_totals.sort_values(ascending=False).head(5)

    print("\nTop 5 Organizations by Total Appointments:")
    print(top_orgs)

if __name__ == "__main__":
    main()
