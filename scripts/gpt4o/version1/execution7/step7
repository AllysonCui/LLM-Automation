#!/usr/bin/env python3

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import os
from pathlib import Path
import sys

def main():
    input_file = Path("scripts/gpt4o/version1/execution7/analysis_data/step6_reappointment_rates.csv")
    output_csv = Path("scripts/gpt4o/version1/execution7/analysis_data/step7_yearly_max_rates.csv")
    output_png = Path("scripts/gpt4o/version1/execution7/analysis_data/step7_yearly_max_rates.png")

    try:
        df = pd.read_csv(input_file)
    except Exception as e:
        print(f"Error loading input file: {e}", file=sys.stderr)
        sys.exit(1)

    # Validate required columns
    required_cols = ['org', 'year', 'reappointment_rate']
    for col in required_cols:
        if col not in df.columns:
            print(f"Missing column: {col}", file=sys.stderr)
            sys.exit(1)

    df = df.dropna(subset=['year', 'reappointment_rate'])
    df['year'] = pd.to_numeric(df['year'], errors='coerce').astype('Int64')

    # Identify top org per year
    top_per_year = (
        df.sort_values(['year', 'reappointment_rate', 'org'], ascending=[True, False, True], kind='stable')
          .groupby('year')
          .first()
          .reset_index()[['year', 'org', 'reappointment_rate']]
    )
    top_per_year.columns = ['year', 'top_org', 'max_rate']

    # Save the results
    try:
        top_per_year.to_csv(output_csv, index=False)
        print(f"Yearly max reappointment rates saved to {output_csv}")
    except Exception as e:
        print(f"Error saving CSV: {e}", file=sys.stderr)
        sys.exit(1)

    # Create visualization
    try:
        plt.figure(figsize=(10, 6))
        plt.plot(top_per_year['year'], top_per_year['max_rate'], marker='o', linestyle='-')
        for i, row in top_per_year.iterrows():
            plt.text(row['year'], row['max_rate'], row['top_org'], fontsize=8, ha='right')
        plt.title("Top Reappointment Rate by Organization per Year")
        plt.xlabel("Year")
        plt.ylabel("Max Reappointment Rate")
        plt.grid(True)
        plt.tight_layout()
        plt.savefig(output_png)
        print(f"Visualization saved to {output_png}")
    except Exception as e:
        print(f"Error creating visualization: {e}", file=sys.stderr)
        sys.exit(1)

    # Print year-by-year results
    print("\nTop Organization by Reappointment Rate Each Year:")
    print(top_per_year)

if __name__ == "__main__":
    main()