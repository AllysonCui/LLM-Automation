#!/usr/bin/env python3
"""
step to summarize appointment counts by organization and year.

Steps:
1. Load 'step3_repeats_marked.csv'
2. Group by 'org' and 'year' to count appointments
3. Pivot into summary table with orgs as rows, years as columns
4. Handle missing data gracefully
5. Save as 'step4_employee_counts.csv'
6. Print summary and highlight top organizations by total appointments

Author: GPT-4o
Date: 2025-06-11
"""

import pandas as pd
from pathlib import Path
import sys

def main():
    input_path = Path("steps/gpt4o/version1/analysis_data/step3_repeats_marked.csv")
    output_path = Path("steps/gpt4o/version1/analysis_data/step4_employee_counts.csv")

    try:
        df = pd.read_csv(input_path)
    except FileNotFoundError:
        print(f"✗ File not found: {input_path}")
        sys.exit(1)
    except Exception as e:
        print(f"✗ Error reading data: {e}")
        sys.exit(1)

    # Validate required columns
    required_cols = {"org", "year"}
    if not required_cols.issubset(df.columns):
        print(f"✗ Dataset must contain columns: {required_cols}")
        sys.exit(1)

    # Clean and coerce year/org
    df["year"] = pd.to_numeric(df["year"], errors="coerce")
    df["org"] = df["org"].astype(str).str.strip()

    # Drop rows with missing org or year
    df = df.dropna(subset=["org", "year"])
    df = df[df["org"] != ""]  # remove empty strings

    # Group and count
    grouped = df.groupby(["org", "year"], dropna=False).size().reset_index(name="appointment_count")

    # Pivot to wide format
    summary_table = grouped.pivot(index="org", columns="year", values="appointment_count")
    summary_table = summary_table.fillna(0).astype(int)

    # Save to CSV
    summary_table.to_csv(output_path)
    print(f"✓ Saved summary table to {output_path}")

    # Print summary
    print("\n→ Appointment Summary Table (sample):")
    print(summary_table.head())

    # Identify top organizations by total appointments
    org_totals = summary_table.sum(axis=1).sort_values(ascending=False)
    top_orgs = org_totals.head(5)

    print("\n→ Top 5 Organizations by Total Appointments:")
    for org, count in top_orgs.items():
        print(f"  {org}: {count:,} appointments")

if __name__ == "__main__":
    main()
