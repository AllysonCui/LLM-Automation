# File: scripts/gpt4o/version2/execution1/step2_extract_key_columns.py

import pandas as pd
from pathlib import Path

# Define paths
INPUT_FILE = Path("scripts/gpt4o/version2/execution1/analysis_data/step1_combined_appointments.csv")
OUTPUT_DIR = Path("scripts/gpt4o/version2/execution1/analysis_data")
OUTPUT_FILE = OUTPUT_DIR / "step2_key_columns_data.csv"

KEY_COLUMNS = ["reappointed", "name", "position", "org", "year"]

def extract_key_columns():
    try:
        # Load input data
        if not INPUT_FILE.exists():
            raise FileNotFoundError(f"Input file not found: {INPUT_FILE}")
        
        df = pd.read_csv(INPUT_FILE)
        print(f"Loaded combined dataset with {len(df)} records and {df.shape[1]} columns.")

        # Check for missing expected columns
        missing_cols = [col for col in KEY_COLUMNS if col not in df.columns]
        if missing_cols:
            raise ValueError(f"Missing expected columns in dataset: {missing_cols}")

        # Extract relevant columns
        df_key = df[KEY_COLUMNS].copy()

        # Report data quality
        print("Column value counts and null statistics:")
        for col in KEY_COLUMNS:
            print(f"- {col}: {df_key[col].notnull().sum()} non-null / {df_key[col].isnull().sum()} null")

        # Save cleaned dataset
        OUTPUT_DIR.mkdir(parents=True, exist_ok=True)
        df_key.to_csv(OUTPUT_FILE, index=False)
        print(f"Saved key column dataset to {OUTPUT_FILE}")

    except Exception as e:
        print(f"Error during key column extraction: {e}")

if __name__ == "__main__":
    extract_key_columns()
