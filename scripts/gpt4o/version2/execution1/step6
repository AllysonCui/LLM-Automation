# File: scripts/gpt4o/version2/execution1/step6_calculate_reappointment_rates.py

import pandas as pd
from pathlib import Path

# Define file paths
EMPLOYEE_COUNT_FILE = Path("scripts/gpt4o/version2/execution1/analysis_data/step4_employee_counts.csv")
REAPPOINTMENT_COUNT_FILE = Path("scripts/gpt4o/version2/execution1/analysis_data/step5_reappointment_counts.csv")
OUTPUT_DIR = Path("scripts/gpt4o/version2/execution1/analysis_data")
OUTPUT_FILE = OUTPUT_DIR / "step6_reappointment_rates.csv"

def calculate_reappointment_rates():
    try:
        if not EMPLOYEE_COUNT_FILE.exists() or not REAPPOINTMENT_COUNT_FILE.exists():
            raise FileNotFoundError("One or both input files are missing.")

        # Load data
        emp_df = pd.read_csv(EMPLOYEE_COUNT_FILE)
        reap_df = pd.read_csv(REAPPOINTMENT_COUNT_FILE)
        print(f"Loaded employee counts: {len(emp_df)} rows")
        print(f"Loaded reappointment counts: {len(reap_df)} rows")

        # Normalize org names
        emp_df["org"] = emp_df["org"].astype(str).str.strip().str.lower()
        reap_df["org"] = reap_df["org"].astype(str).str.strip().str.lower()

        # Merge and calculate rate
        merged = pd.merge(emp_df, reap_df, on=["org", "year"], how="left")
        merged["reappointment_count"] = merged["reappointment_count"].fillna(0).astype(int)
        merged["reappointment_rate"] = merged["reappointment_count"] / merged["employee_count"]

        # Summary
        print(f"Calculated reappointment rates for {len(merged)} org-year combinations.")

        # Save output
        OUTPUT_DIR.mkdir(parents=True, exist_ok=True)
        merged.to_csv(OUTPUT_FILE, index=False)
        print(f"Saved reappointment rates to {OUTPUT_FILE}")

    except Exception as e:
        print(f"Error calculating reappointment rates: {e}")

if __name__ == "__main__":
    calculate_reappointment_rates()
