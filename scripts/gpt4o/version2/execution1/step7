# File: scripts/gpt4o/version2/execution1/step7_max_reappointment_orgs.py

import pandas as pd
from pathlib import Path

# Define paths
INPUT_FILE = Path("scripts/gpt4o/version2/execution1/analysis_data/step6_reappointment_rates.csv")
OUTPUT_DIR = Path("scripts/gpt4o/version2/execution1/analysis_data")
OUTPUT_FILE = OUTPUT_DIR / "step7_yearly_max_rates.csv"

def find_max_reappointment_orgs():
    try:
        if not INPUT_FILE.exists():
            raise FileNotFoundError(f"Input file not found: {INPUT_FILE}")

        df = pd.read_csv(INPUT_FILE)
        print(f"Loaded reappointment rate data with {len(df)} records.")

        # Sort by reappointment_rate to ensure max is at top for each year
        df_sorted = df.sort_values(by=["year", "reappointment_rate"], ascending=[True, False])

        # Drop duplicates to keep only the org with the max rate per year
        top_orgs_per_year = df_sorted.drop_duplicates(subset=["year"], keep="first").reset_index(drop=True)

        print(f"Identified max reappointment orgs for {top_orgs_per_year['year'].nunique()} years.")

        # Save output
        OUTPUT_DIR.mkdir(parents=True, exist_ok=True)
        top_orgs_per_year.to_csv(OUTPUT_FILE, index=False)
        print(f"Saved yearly max reappointment orgs to {OUTPUT_FILE}")

    except Exception as e:
        print(f"Error identifying max reappointment orgs: {e}")

if __name__ == "__main__":
    find_max_reappointment_orgs()
