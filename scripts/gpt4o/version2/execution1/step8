# File: scripts/gpt4o/version2/execution1/step8_annual_reappointment_proportions.py

import pandas as pd
from pathlib import Path

# Define paths
INPUT_FILE = Path("scripts/gpt4o/version2/execution1/analysis_data/step3_repeats_marked.csv")
OUTPUT_DIR = Path("scripts/gpt4o/version2/execution1/analysis_data")
OUTPUT_FILE = OUTPUT_DIR / "step8_annual_proportions.csv"

def compute_annual_proportions():
    try:
        if not INPUT_FILE.exists():
            raise FileNotFoundError(f"Input file not found: {INPUT_FILE}")

        df = pd.read_csv(INPUT_FILE)
        print(f"Loaded dataset with {len(df)} records.")

        # Normalize name
        df["name"] = df["name"].astype(str).str.strip().str.lower()

        # Group by year
        summary = (
            df.groupby("year")
            .agg(
                total_appointments=("name", "nunique"),
                total_reappointments=("reappointed", lambda x: df.loc[x.index, "name"][x].nunique())
            )
            .reset_index()
        )

        summary["reappointment_proportion"] = summary["total_reappointments"] / summary["total_appointments"]

        print("Computed reappointment proportions for each year:")
        print(summary)

        # Save output
        OUTPUT_DIR.mkdir(parents=True, exist_ok=True)
        summary.to_csv(OUTPUT_FILE, index=False)
        print(f"Saved annual reappointment proportions to {OUTPUT_FILE}")

    except Exception as e:
        print(f"Error computing annual reappointment proportions: {e}")

if __name__ == "__main__":
    compute_annual_proportions()
