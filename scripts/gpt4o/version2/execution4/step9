import pandas as pd
import numpy as np
from scipy import stats
from pathlib import Path

# Define paths
input_file = Path("scripts/gpt4o/version2/execution4/analysis_data/step8_annual_proportions.csv")
output_dir = Path("scripts/gpt4o/version2/execution4/analysis_data")
output_txt = output_dir / "step9_regression_results.txt"

# Ensure output directory exists
output_dir.mkdir(parents=True, exist_ok=True)

try:
    # Load the annual proportions
    df = pd.read_csv(input_file)
    df.columns = df.columns.str.strip().str.lower()
    print(f"Loaded annual proportions: {df.shape[0]} rows.")

    # Drop rows with missing year or proportion
    df = df.dropna(subset=["year", "reappointment_proportion"])

    # Independent (X) and dependent (Y) variables
    x = df["year"].values
    y = df["reappointment_proportion"].values

    # Run linear regression
    slope, intercept, r_value, p_value, std_err = stats.linregress(x, y)

    # Prepare regression summary
    summary = (
        f"Linear Regression on Annual Reappointment Proportions\n"
        f"{'-'*55}\n"
        f"Years Analyzed: {x.min()}â€“{x.max()}\n"
        f"Slope: {slope:.6f}\n"
        f"Intercept: {intercept:.6f}\n"
        f"R-squared: {r_value**2:.4f}\n"
        f"P-value: {p_value:.6f}\n"
        f"Standard Error: {std_err:.6f}\n"
        f"{'-'*55}\n"
        f"Interpretation:\n"
        f"- {'Increasing' if slope > 0 else 'Decreasing'} trend in reappointment proportion.\n"
        f"- Trend is {'statistically significant' if p_value < 0.05 else 'not statistically significant'} (p < 0.05).\n"
    )

    # Save results
    with open(output_txt, "w") as f:
        f.write(summary)

    print(f"Regression results saved to {output_txt}")
    print(summary)

except FileNotFoundError:
    print(f"Error: Input file not found at {input_file}")
except Exception as e:
    print(f"An error occurred: {e}")
