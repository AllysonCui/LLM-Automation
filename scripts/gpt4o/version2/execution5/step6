import pandas as pd
from pathlib import Path

# File paths
INPUT_FILE_EMPLOYEES = Path("scripts/gpt4o/version2/execution5/analysis_data/step4_appointment_counts.csv")
INPUT_FILE_REAPPOINTMENTS = Path("scripts/gpt4o/version2/execution5/analysis_data/step5_reappointment_counts.csv")
OUTPUT_FILE = Path("scripts/gpt4o/version2/execution5/analysis_data/step6_reappointment_rates.csv")

# Load input data
try:
    appointment_df = pd.read_csv(INPUT_FILE_EMPLOYEES)
    print(f"Loaded appointment counts with {appointment_df.shape[0]} records.")
except Exception as e:
    raise RuntimeError(f"Failed to load {INPUT_FILE_EMPLOYEES}: {e}")

try:
    reappointment_df = pd.read_csv(INPUT_FILE_REAPPOINTMENTS)
    print(f"Loaded reappointment counts with {reappointment_df.shape[0]} records.")
except Exception as e:
    raise RuntimeError(f"Failed to load {INPUT_FILE_REAPPOINTMENTS}: {e}")

# Merge on org and source_year
merged_df = pd.merge(
    appointment_df,
    reappointment_df,
    on=['org', 'source_year'],
    how='left'
)

# Fill NaNs for reappointment_count (no reappointments in that org-year)
merged_df['reappointment_count'] = merged_df['reappointment_count'].fillna(0).astype(int)

# Calculate reappointment rate
merged_df['reappointment_rate'] = merged_df['reappointment_count'] / merged_df['total_appointments']

# Save output
merged_df.to_csv(OUTPUT_FILE, index=False)
print(f"Saved reappointment rates to {OUTPUT_FILE.name} with {merged_df.shape[0]} records.")
