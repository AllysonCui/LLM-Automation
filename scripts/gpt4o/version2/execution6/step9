# File: scripts/gpt4o/version2/execution6/step9_regression_trend_analysis.py

import pandas as pd
from pathlib import Path
from scipy.stats import linregress

# Define paths
INPUT_FILE = Path("scripts/gpt4o/version2/execution6/analysis_data/step8_annual_proportions.csv")
OUTPUT_DIR = Path("scripts/gpt4o/version2/execution6/analysis_data")
OUTPUT_FILE = OUTPUT_DIR / "step9_regression_results.txt"

# Ensure output directory exists
OUTPUT_DIR.mkdir(parents=True, exist_ok=True)

print("Starting Step 9: Performing linear regression on annual reappointment proportions...")

# Load proportions
try:
    df = pd.read_csv(INPUT_FILE)
    print(f"Loaded annual proportions: {df.shape}")
except Exception as e:
    raise RuntimeError(f"Failed to load input file: {e}")

# Validate columns
if 'source_year' not in df.columns or 'reappointment_proportion' not in df.columns:
    raise ValueError("Input data must contain 'source_year' and 'reappointment_proportion' columns.")

# Prepare variables for regression
x = df['source_year']
y = df['reappointment_proportion']

# Run linear regression
reg = linregress(x, y)

# Format results
results = (
    f"Linear Regression Results:\n"
    f"--------------------------\n"
    f"Slope (trend/year): {reg.slope:.6f}\n"
    f"Intercept: {reg.intercept:.6f}\n"
    f"R-squared: {reg.rvalue ** 2:.4f}\n"
    f"P-value: {reg.pvalue:.6f}\n"
    f"Standard Error: {reg.stderr:.6f}\n"
    f"Conclusion: {'Significant trend' if reg.pvalue < 0.05 else 'No significant trend'}\n"
)

# Output to console and file
print(results)
with open(OUTPUT_FILE, "w") as f:
    f.write(results)

print(f"Step 9 complete: Regression results saved to {OUTPUT_FILE}")
