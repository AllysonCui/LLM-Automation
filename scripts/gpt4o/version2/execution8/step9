# scripts/gpt4o/version2/execution8/step9_regression_analysis.py

import pandas as pd
import numpy as np
from scipy.stats import linregress
from pathlib import Path

# File paths
input_csv = Path("scripts/gpt4o/version2/execution8/analysis_data/step8_annual_proportions.csv")
output_txt = Path("scripts/gpt4o/version2/execution8/analysis_data/step9_regression_results.txt")
output_txt.parent.mkdir(parents=True, exist_ok=True)

def main():
    print("Step 9: Running linear regression on reappointment proportions...")

    if not input_csv.exists():
        print(f"❌ Input file not found: {input_csv}")
        return

    try:
        df = pd.read_csv(input_csv)

        # Drop rows with missing data
        df = df.dropna(subset=["source_year", "reappointment_proportion"])

        # Ensure numeric
        df["source_year"] = pd.to_numeric(df["source_year"], errors="coerce")
        df["reappointment_proportion"] = pd.to_numeric(df["reappointment_proportion"], errors="coerce")
        df = df.dropna()

        # Run linear regression
        slope, intercept, r_value, p_value, std_err = linregress(
            df["source_year"], df["reappointment_proportion"]
        )

        # Prepare results
        results = f"""
Linear Regression on Government-Wide Reappointment Proportions
-------------------------------------------------------------
Intercept             : {intercept:.4f}
Slope (trend/year)    : {slope:.4f}
R-squared             : {r_value**2:.4f}
P-value               : {p_value:.4g}
Standard Error        : {std_err:.4f}

Interpretation:
{'↑ Increasing' if slope > 0 else '↓ Decreasing' if slope < 0 else 'No trend'} trend over time.
{"Significant (p < 0.05)" if p_value < 0.05 else "Not statistically significant"}.
        """.strip()

        # Save to text file
        with open(output_txt, "w") as f:
            f.write(results)

        print(f"✅ Regression results saved to: {output_txt}")
        print(results)

    except Exception as e:
        print(f"❌ Error during regression: {e}")

if __name__ == "__main__":
    main()
