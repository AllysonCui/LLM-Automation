import pandas as pd
from pathlib import Path

# Define input and output paths
employee_counts_file = Path("steps/gpt4o/version2/analysis_data/step4_employee_counts.csv")
reappointment_counts_file = Path("steps/gpt4o/version2/analysis_data/step5_reappointment_counts.csv")
output_file = Path("steps/gpt4o/version2/analysis_data/step6_reappointment_rates.csv")

# Validate file existence
if not employee_counts_file.exists() or not reappointment_counts_file.exists():
    print("[Error] One or more input files are missing.")
else:
    try:
        emp_df = pd.read_csv(employee_counts_file)
        reapp_df = pd.read_csv(reappointment_counts_file)

        print(f"[✓] Loaded employee counts: {len(emp_df)} rows")
        print(f"[✓] Loaded reappointment counts: {len(reapp_df)} rows")

        # Merge the two datasets on org and year
        merged_df = pd.merge(
            emp_df, reapp_df,
            how='left',
            on=['org', 'source_year']
        )

        # Fill missing reappointment counts with 0
        merged_df['num_reappointments'] = merged_df['num_reappointments'].fillna(0).astype(int)

        # Calculate reappointment rate
        merged_df['reappointment_rate'] = merged_df['num_reappointments'] / merged_df['num_employees']

        # Save result
        merged_df.to_csv(output_file, index=False)
        print(f"[✓] Reappointment rates saved to: {output_file}")
        print(f"[Info] Org-Year entries with rate: {len(merged_df)}")

    except Exception as e:
        print(f"[Error] Step 6 failed: {e}")
