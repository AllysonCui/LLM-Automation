import os
import pandas as pd

# Directories to check (from step5 output)
step6_dirs = [
    "scripts/claudeopus4/version1/execution1",
    "scripts/claudeopus4/version1/execution10",
    "scripts/claudeopus4/version1/execution2",
    "scripts/claudeopus4/version1/execution3",
    "scripts/claudeopus4/version1/execution4",
    "scripts/claudeopus4/version1/execution6",
    "scripts/claudeopus4/version1/execution7",
    "scripts/claudeopus4/version1/execution8",
    "scripts/claudeopus4/version1/execution9",
    "scripts/claudeopus4/version2/execution1",
    "scripts/claudeopus4/version2/execution10",
    "scripts/claudeopus4/version2/execution2",
    "scripts/claudesonnet4/version1/execution1",
    "scripts/claudesonnet4/version1/execution10",
    "scripts/claudesonnet4/version1/execution2",
    "scripts/claudesonnet4/version1/execution3",
    "scripts/claudesonnet4/version1/execution4",
    "scripts/claudesonnet4/version1/execution5",
    "scripts/claudesonnet4/version1/execution6",
    "scripts/claudesonnet4/version1/execution8",
    "scripts/claudesonnet4/version1/execution9",
    "scripts/claudesonnet4/version2/execution7",
    "scripts/gpt4o/version1/execution1",
    "scripts/gpt4o/version1/execution10",
    "scripts/gpt4o/version1/execution3",
    "scripts/gpt4o/version1/execution5",
    "scripts/gpt4o/version1/execution7",
    "scripts/gpt4o/version1/execution8",
    "scripts/gpt4o/version1/execution9"
]

# Target row counts
target_rows = {516, 528}

# Process each directory
for path in sorted(step6_dirs):
    analysis_path = os.path.join(path, "analysis_data")
    if not os.path.exists(analysis_path):
        continue

    step6_files = [f for f in os.listdir(analysis_path) if f.startswith("step6") and f.endswith(".csv")]

    if not step6_files:
        continue

    row_counts = []
    found = False

    for fname in sorted(step6_files):
        file_path = os.path.join(analysis_path, fname)
        try:
            df = pd.read_csv(file_path)
            count = len(df)
            row_counts.append((fname, count))
            if count in target_rows:
                found = True
        except Exception:
            continue

    if found:
        print(f"{path}:")
        for fname, count in row_counts:
            print(f"  {fname}: {count} rows")
